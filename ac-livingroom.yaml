substitutions:
  name: ac-livingroom
  friendly_name: Air Conditioner Living Room

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  on_boot:
    then:
      - delay: 30s
      - switch.turn_off:
          id: eps32_s3_led_switch

## Atom S3 lite
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf
    version: latest

light:
  ## G35=RGB WS2812C-2020
  - platform: esp32_rmt_led_strip
    name: LED
    id: led
    internal: true
    rgb_order: GRB
    pin: 35
    num_leds: 4
    # RMT 0 channels will be occupied by IR
    rmt_channel: 1
    chipset: ws2812
    restore_mode: ALWAYS_ON

switch:
  - platform: template
    id: eps32_s3_led_switch
    name: Onboard LED
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    lambda: return id(eps32_s3_led_switch).state;
    turn_on_action:
      - light.turn_on:
          id: led
          brightness: 1.0
    turn_off_action:
      - light.turn_off:
          id: led

## UART on CN105
uart:
  id: HP_UART
  baud_rate: 2400
  tx_pin: GPIO1
  rx_pin: GPIO2

## Default logging level
logger:
  level: INFO

## Enable Home Assistant API
api:
  services:
    - service: set_remote_temperature
      variables:
        temperature: float
      then:
        - lambda: "id(hp).set_remote_temperature(temperature);"
    - service: use_internal_temperature
      then:
        - lambda: "id(hp).set_remote_temperature(0);"

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret ap_ssid
    password: !secret ap_password

## Captive portal when wifi connection fails
captive_portal:

## Enable Web server.
web_server:
  port: 80

## External component reference
external_components:
  - source: github://echavet/MitsubishiCN105ESPHome
    refresh: always

# Climate entity configuration
climate:
  - platform: cn105
    id: hp
    name: Climate
    icon: mdi:hvac
    visual:
      min_temperature: 15
      max_temperature: 31
      temperature_step:
        target_temperature: 0.5
        current_temperature: 0.1
    debounce_delay: 500ms
    update_interval: 30s
    supports:
      mode: [AUTO, COOL, HEAT, FAN_ONLY, DRY]
      fan_mode: [AUTO, LOW, MEDIUM, HIGH]
      swing_mode: []
    kwh_sensor:
      name: Energy Consumed
    input_power_sensor:
      name: Input Power
    stage_sensor:
      name: Stage
    sub_mode_sensor:
      name: Sub Mode
    auto_sub_mode_sensor:
      name: Auto Sub Mode
    outside_air_temperature_sensor:
      name: Outside Air Temp

# Controls
button:
  - platform: restart
    id: restart_button
    name: ESP restart

# Diagnostic sensors
text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP
      icon: mdi:ip
    ssid:
      name: SSID
      icon: mdi:wifi

  - platform: version
    name: Version
    hide_timestamp: true
    disabled_by_default: false
    icon: mdi:new-box
    entity_category: diagnostic

sensor:
  # Reports the WiFi signal strength/RSSI in dB
  - platform: wifi_signal
    name: Signal dB
    id: wifi_signal_db
    update_interval: 60s
    entity_category: diagnostic

  # Reports the Uptime in days
  - platform: uptime
    id: esp32_uptime
    name: "Uptime"
    unit_of_measurement: days
    update_interval: 3600s
    accuracy_decimals: 1
    filters:
      - multiply: 0.000011574
    device_class: duration
    state_class: total_increasing
    entity_category: diagnostic

  - platform: internal_temperature
    name: Internal ESP temperature
    entity_category: diagnostic
